<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
             ">

    <!--
        - This must go before the http element in order to be used by security:authorize tags using the access attribute
        - Facade which isolates Spring Security's requirements for evaluating web-security expressions from the implementation of the underlying expression objects.
    -->
    <beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

    <!--
        - <http>요소의 auto-config 속성을 true로 잡아줌으로써 모든 디폴트 속성값으로 서버를 설정한다.
        - 설정에서 세션 생성하지 않도록 create-session="never" 추가, HttpSession 생성으로 인한 Full GC 방지.
    -->
    <http auto-config='true' use-expressions="true" create-session="never">
        <!-- DelegatingFilterProxy에서 가로챈 요청을 좀 더 세부적으로 나눠주며(pattern) 접근할 수 있는 권한을 설정(access) 한다.-->
        <intercept-url pattern="/admin**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/dba**" access="hasRole('ADMIN') and hasRole('DBA')"/>
        <intercept-url pattern="/home" access="permitAll"/>
        <intercept-url pattern="/" access="permitAll"/>
        <form-login login-page="/login"
                    username-parameter="ssoId"
                    password-parameter="password"
                    authentication-failure-url="/Access_Denied"/>
        <csrf/>

        <!-- 한 유저 동시 접속 막기. 나중에 로그인 한 것은 무효화 된다. -->
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/login_duplicate"/>
        </session-management>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="customUserDetailService"/>
    </authentication-manager>

    <!--
    <beans:bean id="customUserDetailService" class="org.spring4.sample.util.CustomUserDetailService"/>
    -->

</beans:beans>